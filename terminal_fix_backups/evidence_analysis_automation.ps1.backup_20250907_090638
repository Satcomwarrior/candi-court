# EVIDENCE ANALYSIS AUTOMATION SCRIPT
# Based on COMPREHENSIVE_AUGUST_ANALYSIS_FINAL.md

Write-Host "🎯 EVIDENCE ANALYSIS AUTOMATION STARTING..." -ForegroundColor Green
Write-Host "Current Directory: $(Get-Location)" -ForegroundColor Yellow

# Create output directory for analysis results
$outputDir = ".\Analysis_Results_$(Get-Date -Format 'yyyy-MM-dd_HH-mm-ss')"
New-Item -ItemType Directory -Path $outputDir -Force | Out-Null
Write-Host "📁 Created output directory: $outputDir" -ForegroundColor Cyan

# Function to search for files with multiple possible patterns
function Find-EvidenceFiles {
    param(
        [string[]]$Patterns,
        [string]$Description
    )
    
    Write-Host "🔍 Searching for $Description..." -ForegroundColor Yellow
    $foundFiles = @()
    
    foreach ($pattern in $Patterns) {
        $files = Get-ChildItem -Path . -Recurse -Filter $pattern -ErrorAction SilentlyContinue
        $foundFiles += $files
    }
    
    if ($foundFiles.Count -gt 0) {
        Write-Host "✅ Found $($foundFiles.Count) files for $Description" -ForegroundColor Green
        foreach ($file in $foundFiles) {
            Write-Host "   📄 $($file.FullName)" -ForegroundColor White
        }
    } else {
        Write-Host "❌ No files found for $Description" -ForegroundColor Red
    }
    
    return $foundFiles
}

# Function to analyze file metadata
function Get-FileAnalysis {
    param([System.IO.FileInfo]$File)
    
    $analysis = @{
        'FullPath' = $File.FullName
        'Size' = $File.Length
        'Created' = $File.CreationTime
        'Modified' = $File.LastWriteTime
        'Extension' = $File.Extension
    }
    
    return $analysis
}

Write-Host "`n🎥 SEARCHING FOR AUDIO RECORDINGS..." -ForegroundColor Magenta

# 1. CRITICAL AUDIO RECORDINGS
$audioPatterns = @(
    "*28921_1_recording000000.m4a",
    "*29032_1_recording000000.m4a", 
    "*Unpacking_Irregularities*Washington_State*.m4a",
    "MediaExtract\*recording*.m4a",
    "*recording*.m4a"
)

$audioFiles = Find-EvidenceFiles -Patterns $audioPatterns -Description "Audio Recordings"

Write-Host "`n📺 SEARCHING FOR SCREEN RECORDINGS..." -ForegroundColor Magenta

# 2. SCREEN RECORDINGS - DIGITAL STALKING PROOF
$screenPatterns = @(
    "*Screen_Recording_20240925_104353_Telegram.mp4",
    "*Screen_Recording_20240926_145824_Telegram*.mp4",
    "*Screen_Recording_20240926_151301_Telegram.mp4",
    "*Screen_Recording_20240926_154955_Maps.mp4",
    "*Screen_Recording_20240927_203609_Telegram.mp4",
    "*Screen_Recording_20250817_234532_Chrome.mp4",
    "*Screen_Recording*.mp4"
)

$screenFiles = Find-EvidenceFiles -Patterns $screenPatterns -Description "Screen Recordings"

Write-Host "`n🎬 SEARCHING FOR VIDEO EVIDENCE..." -ForegroundColor Magenta

# 3. VIDEO EVIDENCE
$videoPatterns = @(
    "MediaExtract\*28494_1_20240206_003148_001.mp4",
    "MediaExtract\*28572_1_video000000.mp4",
    "MediaExtract\*28693_1_video000000.mp4",
    "MediaExtract\*28632_1_video000000.mp4",
    "MediaExtract\*.mp4",
    "*IMG_6714.MOV",
    "*IMG_6715.MOV", 
    "*IMG_6721.MOV",
    "*IMG_6725.MOV",
    "*.MOV"
)

$videoFiles = Find-EvidenceFiles -Patterns $videoPatterns -Description "Video Evidence"

Write-Host "`n📋 SEARCHING FOR COURT DOCUMENTS..." -ForegroundColor Magenta

# 4. COURT DOCUMENTS
$courtPatterns = @(
    "*transcript-185a68aa-2f3b-4a8c-99db-2f9078c16271-2025-08-16*.PDF",
    "*OneDrive_2_8-12-2025.zip",
    "*2025 08 05*",
    "*HIS CASE*.pdf",
    "*HER CASE*.pdf",
    "*Sealed HC rec Therapy*.pdf",
    "*Miller release from mental hold*.pdf",
    "*exhibit*.pdf",
    "*Neighbor testimony*.pdf"
)

$courtFiles = Find-EvidenceFiles -Patterns $courtPatterns -Description "Court Documents"

Write-Host "`n💰 SEARCHING FOR FINANCIAL RECORDS..." -ForegroundColor Magenta

# 5. FINANCIAL ABUSE EVIDENCE
$financialPatterns = @(
    "*AccountStatement*3621082704*.pdf",
    "*AccountHistory*.xls",
    "*AccountHistory*.qbo"
)

$financialFiles = Find-EvidenceFiles -Patterns $financialPatterns -Description "Financial Records"

# GENERATE COMPREHENSIVE ANALYSIS REPORT
Write-Host "`n📊 GENERATING ANALYSIS REPORT..." -ForegroundColor Green

$reportPath = Join-Path $outputDir "Evidence_Analysis_Report.txt"

$report = @"
🎯 EVIDENCE ANALYSIS AUTOMATION REPORT
Generated: $(Get-Date)
Analysis Directory: $(Get-Location)

═══════════════════════════════════════════════════════════════

🎥 AUDIO RECORDINGS ANALYSIS:
Total Files Found: $($audioFiles.Count)

"@

foreach ($file in $audioFiles) {
    $analysis = Get-FileAnalysis -File $file
    $report += @"

📄 FILE: $($analysis.FullPath)
   Size: $([math]::Round($analysis.Size / 1MB, 2)) MB
   Created: $($analysis.Created)
   Modified: $($analysis.Modified)
   ⚠️  ACTION REQUIRED: Professional transcription needed for legal proceedings

"@
}

$report += @"

═══════════════════════════════════════════════════════════════

📺 SCREEN RECORDINGS ANALYSIS:
Total Files Found: $($screenFiles.Count)

"@

foreach ($file in $screenFiles) {
    $analysis = Get-FileAnalysis -File $file
    $report += @"

📄 FILE: $($analysis.FullPath)
   Size: $([math]::Round($analysis.Size / 1MB, 2)) MB
   Created: $($analysis.Created)
   Modified: $($analysis.Modified)
   ⚠️  ACTION REQUIRED: Frame-by-frame analysis for stalking evidence

"@
}

$report += @"

═══════════════════════════════════════════════════════════════

🎬 VIDEO EVIDENCE ANALYSIS:
Total Files Found: $($videoFiles.Count)

"@

foreach ($file in $videoFiles) {
    $analysis = Get-FileAnalysis -File $file
    $report += @"

📄 FILE: $($analysis.FullPath)
   Size: $([math]::Round($analysis.Size / 1MB, 2)) MB
   Created: $($analysis.Created)
   Modified: $($analysis.Modified)
   ⚠️  ACTION REQUIRED: Content analysis and chronological ordering

"@
}

$report += @"

═══════════════════════════════════════════════════════════════

📋 COURT DOCUMENTS ANALYSIS:
Total Files Found: $($courtFiles.Count)

"@

foreach ($file in $courtFiles) {
    $analysis = Get-FileAnalysis -File $file
    $report += @"

📄 FILE: $($analysis.FullPath)
   Size: $([math]::Round($analysis.Size / 1MB, 2)) MB
   Created: $($analysis.Created)
   Modified: $($analysis.Modified)
   ⚠️  ACTION REQUIRED: Legal document analysis

"@
}

$report += @"

═══════════════════════════════════════════════════════════════

💰 FINANCIAL RECORDS ANALYSIS:
Total Files Found: $($financialFiles.Count)

"@

foreach ($file in $financialFiles) {
    $analysis = Get-FileAnalysis -File $file
    $report += @"

📄 FILE: $($analysis.FullPath)
   Size: $([math]::Round($analysis.Size / 1MB, 2)) MB
   Created: $($analysis.Created)
   Modified: $($analysis.Modified)
   ⚠️  ACTION REQUIRED: Financial damage calculation

"@
}

$report += @"

═══════════════════════════════════════════════════════════════

🚨 CRITICAL NEXT ACTIONS:

1. IMMEDIATE TRANSCRIPTION NEEDED:
   - All .m4a audio files require professional legal transcription
   - Priority: MediaExtract recording files

2. VIDEO ANALYSIS REQUIRED:
   - Screen recordings need frame-by-frame analysis
   - MediaExtract videos need content identification

3. COURT DOCUMENT REVIEW:
   - 72-page transcript analysis
   - Dual filing pattern documentation

4. FINANCIAL CALCULATION:
   - Account statement analysis for damages
   - Timeline correlation with abuse periods

═══════════════════════════════════════════════════════════════

📊 SUMMARY STATISTICS:
Audio Files: $($audioFiles.Count)
Screen Recordings: $($screenFiles.Count)
Video Evidence: $($videoFiles.Count)
Court Documents: $($courtFiles.Count)
Financial Records: $($financialFiles.Count)

TOTAL EVIDENCE FILES: $(($audioFiles.Count + $screenFiles.Count + $videoFiles.Count + $courtFiles.Count + $financialFiles.Count))

⚖️ CASE STRENGTH: Based on file count and types, this represents OVERWHELMING evidence for legal proceedings.

"@

# Save the report
$report | Out-File -FilePath $reportPath -Encoding UTF8

Write-Host "📄 Analysis report saved to: $reportPath" -ForegroundColor Green

# Create evidence inventory CSV for easy tracking
$csvPath = Join-Path $outputDir "Evidence_Inventory.csv"

$allFiles = @()
$allFiles += $audioFiles | ForEach-Object { [PSCustomObject]@{Type="Audio"; FileName=$_.Name; FullPath=$_.FullName; Size=$_.Length; Created=$_.CreationTime; Modified=$_.LastWriteTime} }
$allFiles += $screenFiles | ForEach-Object { [PSCustomObject]@{Type="Screen Recording"; FileName=$_.Name; FullPath=$_.FullName; Size=$_.Length; Created=$_.CreationTime; Modified=$_.LastWriteTime} }
$allFiles += $videoFiles | ForEach-Object { [PSCustomObject]@{Type="Video"; FileName=$_.Name; FullPath=$_.FullName; Size=$_.Length; Created=$_.CreationTime; Modified=$_.LastWriteTime} }
$allFiles += $courtFiles | ForEach-Object { [PSCustomObject]@{Type="Court Document"; FileName=$_.Name; FullPath=$_.FullName; Size=$_.Length; Created=$_.CreationTime; Modified=$_.LastWriteTime} }
$allFiles += $financialFiles | ForEach-Object { [PSCustomObject]@{Type="Financial"; FileName=$_.Name; FullPath=$_.FullName; Size=$_.Length; Created=$_.CreationTime; Modified=$_.LastWriteTime} }

$allFiles | Export-Csv -Path $csvPath -NoTypeInformation

Write-Host "📊 Evidence inventory saved to: $csvPath" -ForegroundColor Green

Write-Host "`n🎯 AUTOMATION COMPLETE!" -ForegroundColor Green
Write-Host "✅ Found $(($allFiles.Count)) total evidence files" -ForegroundColor Cyan
Write-Host "📁 All results saved to: $outputDir" -ForegroundColor Cyan

Write-Host "`n🚨 IMMEDIATE NEXT STEPS:" -ForegroundColor Red
Write-Host "1. Review the analysis report: $reportPath" -ForegroundColor White
Write-Host "2. Open the CSV inventory: $csvPath" -ForegroundColor White  
Write-Host "3. Prioritize audio file transcription services" -ForegroundColor White
Write-Host "4. Contact legal counsel with evidence inventory" -ForegroundColor White

# Ask if user wants to open the results
Write-Host "`n❓ Would you like to open the analysis results folder? (Y/N): " -ForegroundColor Yellow -NoNewline
$response = Read-Host
if ($response -eq 'Y' -or $response -eq 'y') {
    Start-Process explorer.exe -ArgumentList $outputDir
}

